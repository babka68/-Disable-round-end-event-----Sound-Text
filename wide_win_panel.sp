/* ============================================================================================================
// EN: Notifies the compiler that there should be a character at the end of each expression ;
// RU: Сообщает компилятору о том, что в конце каждого выражения должен стоять символ ;
// ==========================================================================================================*/

#pragma semicolon 1
/* =============================================================================================================
// EN: Notifies the compiler that the plugin syntax is exceptionally new
// RU: Сообщает компилятору о том, что синтаксис плагина исключительно новый
// ===========================================================================================================*/
#pragma newdecls required

/* =============================================================================================================
// EN: Public information about the plugin.
// RU: Общественная информация о плагине.
// ===========================================================================================================*/

public Plugin myinfo = 
{
	/* ============================================================================================================
	// EN: The name of the plugin.
	// RU: Название плагина. 
	// ==========================================================================================================*/
	name = "[Disable round end event] --- Sound => Text", 
	/* ============================================================================================================
	// EN: The author of the plugin.
	// RU: Автор плагина.
	// ==========================================================================================================*/
	author = "babka68", 
	/* ============================================================================================================
	// EN: A brief description of the plugin.
	// RU: Краткое описание плагина.
	// ==========================================================================================================*/
	description = "Плагин отключается события конца раунда --- Звуки и текст", 
	/* ============================================================================================================
	// EN: The version of this plugin.
	// RU: Версия данного плагина.
	// ==========================================================================================================*/
	version = "1.0", 
	/* ============================================================================================================
	// EN: Plugin (author's) support site.
	// RU: Сайт поддержки плагина (автора).
	// ===========================================================================================================*/
	url = "https://vk.com/zakazserver68"
};

/* =============================================================================================================
// EN: A built-in global event whose function is a single call when the plugin is fully initialized.
// RU: Встроенное глобальное событие, функция которого - единождый вызов при полной инициализации плагина.
// =============================================================================================================*/
public void OnPluginStart()
{
	/* =============================================================================================================
	// EN: Catching an event called round_end. EventHookMode_Pre - The callback occurs before the event occurs
	// RU: Отлавливаем событие с названием round_end. EventHookMode_Pre - Обратный вызов происходит до того, как событие произойдет
	// =============================================================================================================*/
	HookEvent("round_end", view_as<EventHook>(Round_End_Diseble_Event), view_as<EventHookMode>(EventHookMode_Pre));
}

/* =============================================================================================================
// EN: Round_End_Diseble_Event callback function.
// RU: Функция обратного вызова Round_End_Diseble_Event.
// =============================================================================================================*/
public Action Round_End_Diseble_Event(Event event, const char[] name, bool dontBroadcast)
{
	if (!dontBroadcast)
	{
		/* =============================================================================================================
		// EN: Sets whether an event's broadcasting will be disabled or not. (True to disable broadcasting, false otherwise.)
		// RU: Задает, будет ли отключена трансляция события или нет. (True для отключения широковещательной передачи, false в противном случае.)
		// =============================================================================================================*/
		event.BroadcastDisabled = true;
	}
	
	/* =============================================================================================================
	// EN: Plugin_Continue - Allows the continuation of the event without changes
	// RU: Plugin_Continue - Разрешает продолжение события без изменений
	// =============================================================================================================*/
	return Plugin_Continue;
} 
